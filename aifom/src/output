-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from FPASLanParser.y
-----------------------------------------------------------------------------

state 82 contains 1 shift/reduce conflicts.
state 84 contains 1 shift/reduce conflicts.

terminal 'exists' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> FPASLan                           (0)
	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules   (1)
	maybe_types -> 'Types:' typedecs                   (2)
	maybe_types ->                                     (3)
	maybe_sets -> 'Sets:' terms ';'                    (4)
	maybe_sets ->                                      (5)
	functions -> 'Functions:' 'public' symdecs ';' 'private' symdecs ';'   (6)
	functions -> 'Functions:' symdecs ';'              (7)
	defdec ->                                          (8)
	defdec -> 'Definitions:' deflist                   (9)
	deflist -> ident ':' term                          (10)
	deflist -> ident '[' idents ']' ':' term           (11)
	deflist -> ident ':' term ';' deflist              (12)
	deflist -> ident '[' idents ']' ':' term ';' deflist   (13)
	typedecs -> idents ':' var_type ';' typedecs       (14)
	typedecs -> ident '=' user_type ';' typedecs       (15)
	typedecs ->                                        (16)
	idents_set -> ident                                (17)
	idents_set -> ident ',' idents_set                 (18)
	idents -> ident                                    (19)
	idents -> ident ',' idents                         (20)
	type_env -> ident ':' var_type_expl                (21)
	type_env -> ident ':' var_type_expl ',' type_env   (22)
	global_type_env -> ident                           (23)
	global_type_env -> ident ',' global_type_env       (24)
	unions -> ident                                    (25)
	unions -> ident '++' unions                        (26)
	var_type -> '{' idents_set '}'                     (27)
	var_type -> var_type_expl                          (28)
	var_type_expl -> ident                             (29)
	var_type_expl -> 'value'                           (30)
	var_type_expl -> 'untyped'                         (31)
	user_type -> '{' idents_set '}'                    (32)
	user_type -> '{' '.' '.' '.' '}'                   (33)
	user_type -> unions                                (34)
	terms -> term                                      (35)
	terms -> term ',' terms                            (36)
	term -> ident                                      (37)
	term -> '_'                                        (38)
	term -> ident '(' terms ')'                        (39)
	term -> ident '[' terms ']'                        (40)
	term -> '[' ident ']'                              (41)
	symdecs -> ident '/' int                           (42)
	symdecs -> ident '/' int ',' symdecs               (43)
	rules -> rule rules                                (44)
	rules ->                                           (45)
	rule -> lambda lhss arrow rhss ';'                 (46)
	lambda -> '\\' global_type_env '.'                 (47)
	lambda -> ident '(' type_env ')'                   (48)
	lambda ->                                          (49)
	lhss -> lhs '.' lhss                               (50)
	lhss ->                                            (51)
	lhss -> lhs                                        (52)
	rhss -> rhs '.' rhss                               (53)
	rhss ->                                            (54)
	rhss -> rhs                                        (55)
	lhs -> rhs                                         (56)
	lhs -> ident 'notin' term                          (57)
	lhs -> 'forall' idents '.' ident 'notin' term      (58)
	rhs -> pfact                                       (59)
	rhs -> ident 'in' term                             (60)
	pfact -> ident '(' terms ')'                       (61)
	pfact -> ident                                     (62)
	arrow -> '=>'                                      (63)
	arrow -> '=[' idents ']=>'                         (64)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	ident          { Tident _ $$ }
	int            { Tint _ $$ }
	'Problem:'     { Tproblem _ }
	'Types:'       { Ttypes _ }
	'Sets:'        { Tsets _ }
	'Functions:'   { Tfunctions _ }
	'public'       { Tpublic _ }
	'private'      { Tprivate _ }
	'Facts:'       { TFacts _ }
	'Rules:'       { TRules _ }
	'Definitions:' { TDefinitions _ }
	'value'        { Tvalue _ }
	'untyped'      { Tuntyped _ }
	'notin'        { Tnotin _ }
	'in'           { Tin _ }
	'forall'       { Tforall _ }
	'exists'       { Texists _ }
	';'            { Tsemicolon _ }
	':'            { Tcolon _ }
	','            { Tcomma _ }
	'{'            { Topenbrace _ }
	'}'            { Tclosebrace _ }
	'['            { Topensquare _ }
	']'            { Tclosesquare _ }
	'('            { Topenpar _ }
	')'            { Tclosepar _ }
	'/'            { Tslash _ }
	'\\'           { Tlambda _ }
	'++'           { Tunion _ }
	'.'            { Tdot _ }
	'_'            { Twild _ }
	'=>'           { Tarrow _ }
	'=['           { Topenarrow _ }
	']=>'          { Tclosarrow _ }
	'='            { Tequal _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	FPASLan         rule  1
	maybe_types     rules 2, 3
	maybe_sets      rules 4, 5
	functions       rules 6, 7
	defdec          rules 8, 9
	deflist         rules 10, 11, 12, 13
	typedecs        rules 14, 15, 16
	idents_set      rules 17, 18
	idents          rules 19, 20
	type_env        rules 21, 22
	global_type_env rules 23, 24
	unions          rules 25, 26
	var_type        rules 27, 28
	var_type_expl   rules 29, 30, 31
	user_type       rules 32, 33, 34
	terms           rules 35, 36
	term            rules 37, 38, 39, 40, 41
	symdecs         rules 42, 43
	rules           rules 44, 45
	rule            rule  46
	lambda          rules 47, 48, 49
	lhss            rules 50, 51, 52
	rhss            rules 53, 54, 55
	lhs             rules 56, 57, 58
	rhs             rules 59, 60
	pfact           rules 61, 62
	arrow           rules 63, 64

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Problem:'     shift, and enter state 2

	FPASLan        goto state 3

State 1


	'Problem:'     shift, and enter state 2


State 2

	FPASLan -> 'Problem:' . ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	ident          shift, and enter state 4


State 3

	%start_parser -> FPASLan .                          (rule 0)

	%eof           accept


State 4

	FPASLan -> 'Problem:' ident . ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	';'            shift, and enter state 5


State 5

	FPASLan -> 'Problem:' ident ';' . maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	'Types:'       shift, and enter state 7
	'Sets:'        reduce using rule 3
	'Functions:'   reduce using rule 3

	maybe_types    goto state 6

State 6

	FPASLan -> 'Problem:' ident ';' maybe_types . maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	'Sets:'        shift, and enter state 12
	'Functions:'   reduce using rule 5

	maybe_sets     goto state 11

State 7

	maybe_types -> 'Types:' . typedecs                  (rule 2)

	ident          shift, and enter state 10
	'Sets:'        reduce using rule 16
	'Functions:'   reduce using rule 16

	typedecs       goto state 8
	idents         goto state 9

State 8

	maybe_types -> 'Types:' typedecs .                  (rule 2)

	'Sets:'        reduce using rule 2
	'Functions:'   reduce using rule 2


State 9

	typedecs -> idents . ':' var_type ';' typedecs      (rule 14)

	':'            shift, and enter state 22


State 10

	typedecs -> ident . '=' user_type ';' typedecs      (rule 15)
	idents -> ident .                                   (rule 19)
	idents -> ident . ',' idents                        (rule 20)

	':'            reduce using rule 19
	','            shift, and enter state 20
	'='            shift, and enter state 21


State 11

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets . functions 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	'Functions:'   shift, and enter state 19

	functions      goto state 18

State 12

	maybe_sets -> 'Sets:' . terms ';'                   (rule 4)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	terms          goto state 13
	term           goto state 14

State 13

	maybe_sets -> 'Sets:' terms . ';'                   (rule 4)

	';'            shift, and enter state 43


State 14

	terms -> term .                                     (rule 35)
	terms -> term . ',' terms                           (rule 36)

	';'            reduce using rule 35
	','            shift, and enter state 42
	']'            reduce using rule 35
	')'            reduce using rule 35


State 15

	term -> ident .                                     (rule 37)
	term -> ident . '(' terms ')'                       (rule 39)
	term -> ident . '[' terms ']'                       (rule 40)

	'Rules:'       reduce using rule 37
	';'            reduce using rule 37
	','            reduce using rule 37
	'['            shift, and enter state 40
	']'            reduce using rule 37
	'('            shift, and enter state 41
	')'            reduce using rule 37
	'.'            reduce using rule 37
	'=>'           reduce using rule 37
	'=['           reduce using rule 37


State 16

	term -> '[' . ident ']'                             (rule 41)

	ident          shift, and enter state 39


State 17

	term -> '_' .                                       (rule 38)

	'Rules:'       reduce using rule 38
	';'            reduce using rule 38
	','            reduce using rule 38
	']'            reduce using rule 38
	')'            reduce using rule 38
	'.'            reduce using rule 38
	'=>'           reduce using rule 38
	'=['           reduce using rule 38


State 18

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions . 'Facts:' symdecs ';' defdec 'Rules:' rules    (rule 1)

	'Facts:'       shift, and enter state 38


State 19

	functions -> 'Functions:' . 'public' symdecs ';' 'private' symdecs ';'    (rule 6)
	functions -> 'Functions:' . symdecs ';'             (rule 7)

	ident          shift, and enter state 36
	'public'       shift, and enter state 37

	symdecs        goto state 35

State 20

	idents -> ident ',' . idents                        (rule 20)

	ident          shift, and enter state 34

	idents         goto state 33

State 21

	typedecs -> ident '=' . user_type ';' typedecs      (rule 15)

	ident          shift, and enter state 31
	'{'            shift, and enter state 32

	unions         goto state 29
	user_type      goto state 30

State 22

	typedecs -> idents ':' . var_type ';' typedecs      (rule 14)

	ident          shift, and enter state 25
	'value'        shift, and enter state 26
	'untyped'      shift, and enter state 27
	'{'            shift, and enter state 28

	var_type       goto state 23
	var_type_expl  goto state 24

State 23

	typedecs -> idents ':' var_type . ';' typedecs      (rule 14)

	';'            shift, and enter state 58


State 24

	var_type -> var_type_expl .                         (rule 28)

	';'            reduce using rule 28


State 25

	var_type_expl -> ident .                            (rule 29)

	';'            reduce using rule 29
	','            reduce using rule 29
	')'            reduce using rule 29


State 26

	var_type_expl -> 'value' .                          (rule 30)

	';'            reduce using rule 30
	','            reduce using rule 30
	')'            reduce using rule 30


State 27

	var_type_expl -> 'untyped' .                        (rule 31)

	';'            reduce using rule 31
	','            reduce using rule 31
	')'            reduce using rule 31


State 28

	var_type -> '{' . idents_set '}'                    (rule 27)

	ident          shift, and enter state 53

	idents_set     goto state 57

State 29

	user_type -> unions .                               (rule 34)

	';'            reduce using rule 34


State 30

	typedecs -> ident '=' user_type . ';' typedecs      (rule 15)

	';'            shift, and enter state 56


State 31

	unions -> ident .                                   (rule 25)
	unions -> ident . '++' unions                       (rule 26)

	';'            reduce using rule 25
	'++'           shift, and enter state 55


State 32

	user_type -> '{' . idents_set '}'                   (rule 32)
	user_type -> '{' . '.' '.' '.' '}'                  (rule 33)

	ident          shift, and enter state 53
	'.'            shift, and enter state 54

	idents_set     goto state 52

State 33

	idents -> ident ',' idents .                        (rule 20)

	':'            reduce using rule 20
	']'            reduce using rule 20
	'.'            reduce using rule 20
	']=>'          reduce using rule 20


State 34

	idents -> ident .                                   (rule 19)
	idents -> ident . ',' idents                        (rule 20)

	':'            reduce using rule 19
	','            shift, and enter state 20
	']'            reduce using rule 19
	'.'            reduce using rule 19
	']=>'          reduce using rule 19


State 35

	functions -> 'Functions:' symdecs . ';'             (rule 7)

	';'            shift, and enter state 51


State 36

	symdecs -> ident . '/' int                          (rule 42)
	symdecs -> ident . '/' int ',' symdecs              (rule 43)

	'/'            shift, and enter state 50


State 37

	functions -> 'Functions:' 'public' . symdecs ';' 'private' symdecs ';'    (rule 6)

	ident          shift, and enter state 36

	symdecs        goto state 49

State 38

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' . symdecs ';' defdec 'Rules:' rules    (rule 1)

	ident          shift, and enter state 36

	symdecs        goto state 48

State 39

	term -> '[' ident . ']'                             (rule 41)

	']'            shift, and enter state 47


State 40

	term -> ident '[' . terms ']'                       (rule 40)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	terms          goto state 46
	term           goto state 14

State 41

	term -> ident '(' . terms ')'                       (rule 39)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	terms          goto state 45
	term           goto state 14

State 42

	terms -> term ',' . terms                           (rule 36)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	terms          goto state 44
	term           goto state 14

State 43

	maybe_sets -> 'Sets:' terms ';' .                   (rule 4)

	'Functions:'   reduce using rule 4


State 44

	terms -> term ',' terms .                           (rule 36)

	';'            reduce using rule 36
	']'            reduce using rule 36
	')'            reduce using rule 36


State 45

	term -> ident '(' terms . ')'                       (rule 39)

	')'            shift, and enter state 70


State 46

	term -> ident '[' terms . ']'                       (rule 40)

	']'            shift, and enter state 69


State 47

	term -> '[' ident ']' .                             (rule 41)

	'Rules:'       reduce using rule 41
	';'            reduce using rule 41
	','            reduce using rule 41
	']'            reduce using rule 41
	')'            reduce using rule 41
	'.'            reduce using rule 41
	'=>'           reduce using rule 41
	'=['           reduce using rule 41


State 48

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs . ';' defdec 'Rules:' rules    (rule 1)

	';'            shift, and enter state 68


State 49

	functions -> 'Functions:' 'public' symdecs . ';' 'private' symdecs ';'    (rule 6)

	';'            shift, and enter state 67


State 50

	symdecs -> ident '/' . int                          (rule 42)
	symdecs -> ident '/' . int ',' symdecs              (rule 43)

	int            shift, and enter state 66


State 51

	functions -> 'Functions:' symdecs ';' .             (rule 7)

	'Facts:'       reduce using rule 7


State 52

	user_type -> '{' idents_set . '}'                   (rule 32)

	'}'            shift, and enter state 65


State 53

	idents_set -> ident .                               (rule 17)
	idents_set -> ident . ',' idents_set                (rule 18)

	','            shift, and enter state 64
	'}'            reduce using rule 17


State 54

	user_type -> '{' '.' . '.' '.' '}'                  (rule 33)

	'.'            shift, and enter state 63


State 55

	unions -> ident '++' . unions                       (rule 26)

	ident          shift, and enter state 31

	unions         goto state 62

State 56

	typedecs -> ident '=' user_type ';' . typedecs      (rule 15)

	ident          shift, and enter state 10
	'Sets:'        reduce using rule 16
	'Functions:'   reduce using rule 16

	typedecs       goto state 61
	idents         goto state 9

State 57

	var_type -> '{' idents_set . '}'                    (rule 27)

	'}'            shift, and enter state 60


State 58

	typedecs -> idents ':' var_type ';' . typedecs      (rule 14)

	ident          shift, and enter state 10
	'Sets:'        reduce using rule 16
	'Functions:'   reduce using rule 16

	typedecs       goto state 59
	idents         goto state 9

State 59

	typedecs -> idents ':' var_type ';' typedecs .      (rule 14)

	'Sets:'        reduce using rule 14
	'Functions:'   reduce using rule 14


State 60

	var_type -> '{' idents_set '}' .                    (rule 27)

	';'            reduce using rule 27


State 61

	typedecs -> ident '=' user_type ';' typedecs .      (rule 15)

	'Sets:'        reduce using rule 15
	'Functions:'   reduce using rule 15


State 62

	unions -> ident '++' unions .                       (rule 26)

	';'            reduce using rule 26


State 63

	user_type -> '{' '.' '.' . '.' '}'                  (rule 33)

	'.'            shift, and enter state 76


State 64

	idents_set -> ident ',' . idents_set                (rule 18)

	ident          shift, and enter state 53

	idents_set     goto state 75

State 65

	user_type -> '{' idents_set '}' .                   (rule 32)

	';'            reduce using rule 32


State 66

	symdecs -> ident '/' int .                          (rule 42)
	symdecs -> ident '/' int . ',' symdecs              (rule 43)

	';'            reduce using rule 42
	','            shift, and enter state 74


State 67

	functions -> 'Functions:' 'public' symdecs ';' . 'private' symdecs ';'    (rule 6)

	'private'      shift, and enter state 73


State 68

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' . defdec 'Rules:' rules    (rule 1)

	'Rules:'       reduce using rule 8
	'Definitions:' shift, and enter state 72

	defdec         goto state 71

State 69

	term -> ident '[' terms ']' .                       (rule 40)

	'Rules:'       reduce using rule 40
	';'            reduce using rule 40
	','            reduce using rule 40
	']'            reduce using rule 40
	')'            reduce using rule 40
	'.'            reduce using rule 40
	'=>'           reduce using rule 40
	'=['           reduce using rule 40


State 70

	term -> ident '(' terms ')' .                       (rule 39)

	'Rules:'       reduce using rule 39
	';'            reduce using rule 39
	','            reduce using rule 39
	']'            reduce using rule 39
	')'            reduce using rule 39
	'.'            reduce using rule 39
	'=>'           reduce using rule 39
	'=['           reduce using rule 39


State 71

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec . 'Rules:' rules    (rule 1)

	'Rules:'       shift, and enter state 82


State 72

	defdec -> 'Definitions:' . deflist                  (rule 9)

	ident          shift, and enter state 81

	deflist        goto state 80

State 73

	functions -> 'Functions:' 'public' symdecs ';' 'private' . symdecs ';'    (rule 6)

	ident          shift, and enter state 36

	symdecs        goto state 79

State 74

	symdecs -> ident '/' int ',' . symdecs              (rule 43)

	ident          shift, and enter state 36

	symdecs        goto state 78

State 75

	idents_set -> ident ',' idents_set .                (rule 18)

	'}'            reduce using rule 18


State 76

	user_type -> '{' '.' '.' '.' . '}'                  (rule 33)

	'}'            shift, and enter state 77


State 77

	user_type -> '{' '.' '.' '.' '}' .                  (rule 33)

	';'            reduce using rule 33


State 78

	symdecs -> ident '/' int ',' symdecs .              (rule 43)

	';'            reduce using rule 43


State 79

	functions -> 'Functions:' 'public' symdecs ';' 'private' symdecs . ';'    (rule 6)

	';'            shift, and enter state 90


State 80

	defdec -> 'Definitions:' deflist .                  (rule 9)

	'Rules:'       reduce using rule 9


State 81

	deflist -> ident . ':' term                         (rule 10)
	deflist -> ident . '[' idents ']' ':' term          (rule 11)
	deflist -> ident . ':' term ';' deflist             (rule 12)
	deflist -> ident . '[' idents ']' ':' term ';' deflist    (rule 13)

	':'            shift, and enter state 88
	'['            shift, and enter state 89


State 82

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' . rules    (rule 1)

	ident          shift, and enter state 86
			(reduce using rule 49)

	'forall'       reduce using rule 49
	'\\'           shift, and enter state 87
	'=>'           reduce using rule 49
	'=['           reduce using rule 49
	%eof           reduce using rule 45

	rules          goto state 83
	rule           goto state 84
	lambda         goto state 85

State 83

	FPASLan -> 'Problem:' ident ';' maybe_types maybe_sets functions 'Facts:' symdecs ';' defdec 'Rules:' rules .    (rule 1)

	%eof           reduce using rule 1


State 84

	rules -> rule . rules                               (rule 44)

	ident          shift, and enter state 86
			(reduce using rule 49)

	'forall'       reduce using rule 49
	'\\'           shift, and enter state 87
	'=>'           reduce using rule 49
	'=['           reduce using rule 49
	%eof           reduce using rule 45

	rules          goto state 102
	rule           goto state 84
	lambda         goto state 85

State 85

	rule -> lambda . lhss arrow rhss ';'                (rule 46)

	ident          shift, and enter state 100
	'forall'       shift, and enter state 101
	'=>'           reduce using rule 51
	'=['           reduce using rule 51

	lhss           goto state 96
	lhs            goto state 97
	rhs            goto state 98
	pfact          goto state 99

State 86

	lambda -> ident . '(' type_env ')'                  (rule 48)

	'('            shift, and enter state 95


State 87

	lambda -> '\\' . global_type_env '.'                (rule 47)

	ident          shift, and enter state 94

	global_type_envgoto state 93

State 88

	deflist -> ident ':' . term                         (rule 10)
	deflist -> ident ':' . term ';' deflist             (rule 12)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	term           goto state 92

State 89

	deflist -> ident '[' . idents ']' ':' term          (rule 11)
	deflist -> ident '[' . idents ']' ':' term ';' deflist    (rule 13)

	ident          shift, and enter state 34

	idents         goto state 91

State 90

	functions -> 'Functions:' 'public' symdecs ';' 'private' symdecs ';' .    (rule 6)

	'Facts:'       reduce using rule 6


State 91

	deflist -> ident '[' idents . ']' ':' term          (rule 11)
	deflist -> ident '[' idents . ']' ':' term ';' deflist    (rule 13)

	']'            shift, and enter state 116


State 92

	deflist -> ident ':' term .                         (rule 10)
	deflist -> ident ':' term . ';' deflist             (rule 12)

	'Rules:'       reduce using rule 10
	';'            shift, and enter state 115


State 93

	lambda -> '\\' global_type_env . '.'                (rule 47)

	'.'            shift, and enter state 114


State 94

	global_type_env -> ident .                          (rule 23)
	global_type_env -> ident . ',' global_type_env      (rule 24)

	','            shift, and enter state 113
	'.'            reduce using rule 23


State 95

	lambda -> ident '(' . type_env ')'                  (rule 48)

	ident          shift, and enter state 112

	type_env       goto state 111

State 96

	rule -> lambda lhss . arrow rhss ';'                (rule 46)

	'=>'           shift, and enter state 109
	'=['           shift, and enter state 110

	arrow          goto state 108

State 97

	lhss -> lhs . '.' lhss                              (rule 50)
	lhss -> lhs .                                       (rule 52)

	'.'            shift, and enter state 107
	'=>'           reduce using rule 52
	'=['           reduce using rule 52


State 98

	lhs -> rhs .                                        (rule 56)

	'.'            reduce using rule 56
	'=>'           reduce using rule 56
	'=['           reduce using rule 56


State 99

	rhs -> pfact .                                      (rule 59)

	';'            reduce using rule 59
	'.'            reduce using rule 59
	'=>'           reduce using rule 59
	'=['           reduce using rule 59


State 100

	lhs -> ident . 'notin' term                         (rule 57)
	rhs -> ident . 'in' term                            (rule 60)
	pfact -> ident . '(' terms ')'                      (rule 61)
	pfact -> ident .                                    (rule 62)

	'notin'        shift, and enter state 104
	'in'           shift, and enter state 105
	'('            shift, and enter state 106
	'.'            reduce using rule 62
	'=>'           reduce using rule 62
	'=['           reduce using rule 62


State 101

	lhs -> 'forall' . idents '.' ident 'notin' term     (rule 58)

	ident          shift, and enter state 34

	idents         goto state 103

State 102

	rules -> rule rules .                               (rule 44)

	%eof           reduce using rule 44


State 103

	lhs -> 'forall' idents . '.' ident 'notin' term     (rule 58)

	'.'            shift, and enter state 130


State 104

	lhs -> ident 'notin' . term                         (rule 57)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	term           goto state 129

State 105

	rhs -> ident 'in' . term                            (rule 60)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	term           goto state 128

State 106

	pfact -> ident '(' . terms ')'                      (rule 61)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	terms          goto state 127
	term           goto state 14

State 107

	lhss -> lhs '.' . lhss                              (rule 50)

	ident          shift, and enter state 100
	'forall'       shift, and enter state 101
	'=>'           reduce using rule 51
	'=['           reduce using rule 51

	lhss           goto state 126
	lhs            goto state 97
	rhs            goto state 98
	pfact          goto state 99

State 108

	rule -> lambda lhss arrow . rhss ';'                (rule 46)

	ident          shift, and enter state 125
	';'            reduce using rule 54

	rhss           goto state 123
	rhs            goto state 124
	pfact          goto state 99

State 109

	arrow -> '=>' .                                     (rule 63)

	ident          reduce using rule 63
	';'            reduce using rule 63


State 110

	arrow -> '=[' . idents ']=>'                        (rule 64)

	ident          shift, and enter state 34

	idents         goto state 122

State 111

	lambda -> ident '(' type_env . ')'                  (rule 48)

	')'            shift, and enter state 121


State 112

	type_env -> ident . ':' var_type_expl               (rule 21)
	type_env -> ident . ':' var_type_expl ',' type_env    (rule 22)

	':'            shift, and enter state 120


State 113

	global_type_env -> ident ',' . global_type_env      (rule 24)

	ident          shift, and enter state 94

	global_type_envgoto state 119

State 114

	lambda -> '\\' global_type_env '.' .                (rule 47)

	ident          reduce using rule 47
	'forall'       reduce using rule 47
	'=>'           reduce using rule 47
	'=['           reduce using rule 47


State 115

	deflist -> ident ':' term ';' . deflist             (rule 12)

	ident          shift, and enter state 81

	deflist        goto state 118

State 116

	deflist -> ident '[' idents ']' . ':' term          (rule 11)
	deflist -> ident '[' idents ']' . ':' term ';' deflist    (rule 13)

	':'            shift, and enter state 117


State 117

	deflist -> ident '[' idents ']' ':' . term          (rule 11)
	deflist -> ident '[' idents ']' ':' . term ';' deflist    (rule 13)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	term           goto state 137

State 118

	deflist -> ident ':' term ';' deflist .             (rule 12)

	'Rules:'       reduce using rule 12


State 119

	global_type_env -> ident ',' global_type_env .      (rule 24)

	'.'            reduce using rule 24


State 120

	type_env -> ident ':' . var_type_expl               (rule 21)
	type_env -> ident ':' . var_type_expl ',' type_env    (rule 22)

	ident          shift, and enter state 25
	'value'        shift, and enter state 26
	'untyped'      shift, and enter state 27

	var_type_expl  goto state 136

State 121

	lambda -> ident '(' type_env ')' .                  (rule 48)

	ident          reduce using rule 48
	'forall'       reduce using rule 48
	'=>'           reduce using rule 48
	'=['           reduce using rule 48


State 122

	arrow -> '=[' idents . ']=>'                        (rule 64)

	']=>'          shift, and enter state 135


State 123

	rule -> lambda lhss arrow rhss . ';'                (rule 46)

	';'            shift, and enter state 134


State 124

	rhss -> rhs . '.' rhss                              (rule 53)
	rhss -> rhs .                                       (rule 55)

	';'            reduce using rule 55
	'.'            shift, and enter state 133


State 125

	rhs -> ident . 'in' term                            (rule 60)
	pfact -> ident . '(' terms ')'                      (rule 61)
	pfact -> ident .                                    (rule 62)

	'in'           shift, and enter state 105
	';'            reduce using rule 62
	'('            shift, and enter state 106
	'.'            reduce using rule 62


State 126

	lhss -> lhs '.' lhss .                              (rule 50)

	'=>'           reduce using rule 50
	'=['           reduce using rule 50


State 127

	pfact -> ident '(' terms . ')'                      (rule 61)

	')'            shift, and enter state 132


State 128

	rhs -> ident 'in' term .                            (rule 60)

	';'            reduce using rule 60
	'.'            reduce using rule 60
	'=>'           reduce using rule 60
	'=['           reduce using rule 60


State 129

	lhs -> ident 'notin' term .                         (rule 57)

	'.'            reduce using rule 57
	'=>'           reduce using rule 57
	'=['           reduce using rule 57


State 130

	lhs -> 'forall' idents '.' . ident 'notin' term     (rule 58)

	ident          shift, and enter state 131


State 131

	lhs -> 'forall' idents '.' ident . 'notin' term     (rule 58)

	'notin'        shift, and enter state 141


State 132

	pfact -> ident '(' terms ')' .                      (rule 61)

	';'            reduce using rule 61
	'.'            reduce using rule 61
	'=>'           reduce using rule 61
	'=['           reduce using rule 61


State 133

	rhss -> rhs '.' . rhss                              (rule 53)

	ident          shift, and enter state 125
	';'            reduce using rule 54

	rhss           goto state 140
	rhs            goto state 124
	pfact          goto state 99

State 134

	rule -> lambda lhss arrow rhss ';' .                (rule 46)

	ident          reduce using rule 46
	'forall'       reduce using rule 46
	'\\'           reduce using rule 46
	'=>'           reduce using rule 46
	'=['           reduce using rule 46
	%eof           reduce using rule 46


State 135

	arrow -> '=[' idents ']=>' .                        (rule 64)

	ident          reduce using rule 64
	';'            reduce using rule 64


State 136

	type_env -> ident ':' var_type_expl .               (rule 21)
	type_env -> ident ':' var_type_expl . ',' type_env    (rule 22)

	','            shift, and enter state 139
	')'            reduce using rule 21


State 137

	deflist -> ident '[' idents ']' ':' term .          (rule 11)
	deflist -> ident '[' idents ']' ':' term . ';' deflist    (rule 13)

	'Rules:'       reduce using rule 11
	';'            shift, and enter state 138


State 138

	deflist -> ident '[' idents ']' ':' term ';' . deflist    (rule 13)

	ident          shift, and enter state 81

	deflist        goto state 144

State 139

	type_env -> ident ':' var_type_expl ',' . type_env    (rule 22)

	ident          shift, and enter state 112

	type_env       goto state 143

State 140

	rhss -> rhs '.' rhss .                              (rule 53)

	';'            reduce using rule 53


State 141

	lhs -> 'forall' idents '.' ident 'notin' . term     (rule 58)

	ident          shift, and enter state 15
	'['            shift, and enter state 16
	'_'            shift, and enter state 17

	term           goto state 142

State 142

	lhs -> 'forall' idents '.' ident 'notin' term .     (rule 58)

	'.'            reduce using rule 58
	'=>'           reduce using rule 58
	'=['           reduce using rule 58


State 143

	type_env -> ident ':' var_type_expl ',' type_env .    (rule 22)

	')'            reduce using rule 22


State 144

	deflist -> ident '[' idents ']' ':' term ';' deflist .    (rule 13)

	'Rules:'       reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 65
Number of terminals: 35
Number of non-terminals: 28
Number of states: 145
