
Protocol: EasyID

Types: Agent U,W,e;
       Number CODE, ANSWER;
       Function pk;
       Symmetric_key PWD

#Initial Knowledge problem on CPR and PWD
Knowledge: U: W,U,e,pk(W),pk(e);
           W: W,U,e,pk(e),pk(W),inv(pk(W));
           e: W,U,e,pk(e),pk(W),inv(pk(e))

#where U!= W

Actions:

#1st step: User transfer the CPR number and password to the Website
#U -> W: { U, { U,W,PWD }pk(e) }pk(W)
U -> W: { U,W, { U,W,PWD }pk(e) }pk(W)     # msg between U and W
#2nd step: Website transfer the CPR number and password to the e company
#W -> e: {{ U,W }pk(e), { U,W,Pwd }pk(e) }inv(pk(W))
W -> e: {{ U,W, PWD }pk(e) }inv(pk(W))

#Big problem
#3rd step: If the password matches to the CPR(U) && the msg is come from the W then the e company return the challenge code
#e -> W: {U,e,CODE}pk(W)
#e -> W: {{U,e,CODE,{Kwu}inv(pk(e))}}pk(W)
e -> W: { U,W, {| U,e,CODE |}PWD }pk(W)
#4th step: The Website could be the intruder, and the Website bypass the message from e company to the User
#W -> U: U,e,CODE
#W -> U: {U,e,CODE}inv(pk(W)) #W -> U: {U,e,CODE,{Kwu}inv(pk(e))}inv(pk(w))
W -> U: {U,W, {| U,e,CODE |}PWD }pk(W)

#5th step: The User enter the answer to the code to the Website.
#U -> W: { U, { U,W,CODE,ANSWER }pk(e) }pk(W)
U -> W: { U,W, { U,W,CODE,ANSWER }pk(e) }pk(W)

#6th step: The Website passing the answer of the code to the e company
#W -> e: {{U,W,CODE,ANSWER}pk(e)}inv(pk(W))
W -> e: {{ U,W,CODE,ANSWER }pk(e) }inv(pk(W))

#Big problem
#7th step: If the answer matches with the code && the message is coming from the W then the e company return the temporal shared key between U/W
e -> W: {U,W,Ktemp}pk(W), U,W,e,Ktemp
#8th step: The Website bypass the message from the e company to the User
W -> U: U,W,e,Ktemp


Goals:
U authenticates e on Ktemp,W
W authenticates e on Ktemp,U
Ktemp secret between U,W,e


# teletype token a1c2a42c4b2b618fa6e0578bb11ed6906ced589d
