Protocol: EasyID

Types: Agent U, W, e;
       Number CODE, Nu, Nw, g,Y,Z,PMS;
       Function pk, sk, kUe, mac;
       Symmetric_key Ktemp

Knowledge: U: U,W,e,pk(W),pk(e),g,sk(U,e),mac,kUe;
           W: U,W,e,pk(W),pk(e),inv(pk(W)),g;
           e: U,W,e,pk(W),pk(e),inv(pk(e)),g,sk(U,e),mac,kUe
where U != W

Actions:
### DH helps the issue of the strong authentication,
### to make intruder not be able to do the replay attack
### Pure shared key encryption has the replay attack issue
#U -> e: {| U,e, exp(g,X) |}sk(U,e)
#e -> U: { U,e, exp(g,Z) }inv(pk(e))

#U -> e: {| U,e, CPR,PWD |}exp(exp(g,X), Z)
#e -> U: {| e,U, CODE |}exp(exp(g,Z), X)

W -> U: { W,Nw }inv(pk(W))                              # If U is CPR, W knows CPR already.

U -> e: { U,W,Nu,Nw }pk(e)                     # The model of password: sk(U,e)
e -> U: {| U,W,CODE |}kUe(Nu,Nw, sk(U,e))               # Check with sebastian
U -> e: {| U,W,mac(sk(U,e), CODE) |}kUe(Nu,Nw, sk(U,e)) # mac(sk(U,e), CODE)

e -> W: { { U,W,Nw,Ktemp }pk(W), {| U,W,Ktemp |}kUe(Nu,Nw, sk(U,e)) }inv(pk(e))
W -> U: {| U,W,Ktemp |}kUe(Nu,Nw, sk(U,e))
U -> W: {| PMS |}Ktemp

Goals:

U authenticates e on W,Ktemp
W authenticates e on U,Ktemp
U,Ktemp secret between U,W,e

#e authenticates U on sk(U,e)
#sk(U,e) secret between U,e

W authenticates U on PMS
PMS secret between U,W

#U -> W: { U,Nu }pk(W)

#W -> e: { W,e, exp(g,Y) }inv(pk(W))
#e -> W: { W,e, exp(g,Z) }inv(pk(e))

#W -> e: {| U,W,e,Nu|}exp(exp(g,Y), Z)

#e -> W: {| U,W,e,Nu,{| U,W,Nu|}sk(U,e) |}exp(exp(g,Z), Y)
#W -> U: {| U,W,Nu|}sk(U,e)

#U -> W: { { {| U,W,Nu|}sk(U,e) }pk(e) }pk(W)
#W -> e: {| U,W,e,Nu, { {| U,W,Nu |}sk(U,e) }pk(e) |}exp(exp(g,Y), Z)

#e -> W: {| U,W,e,Nu, {| U,W,CODE,Nu |}sk(U,e) |}exp(exp(g,Z), Y)
#W -> U: {| U,W,CODE,Nu |}sk(U,e)

#U -> W: { { {| U,W,Nu, mac(sk(U,e),CODE) |}sk(U,e) }pk(e) }pk(W)
#W -> e: {| U,W,e,Nu, { {| U,W,Nu, mac(sk(U,e),CODE) |}sk(U,e) }pk(e) |}exp(exp(g,Y), Z)

#e -> W: {| U,W,e,Nu, { U,W,Nu,Ktemp }inv(pk(e)), {| U,W,Nu,Ktemp |}sk(U,e) |}exp(exp(g,Z), Y)
#W -> U: {| U,W,Nu,Ktemp |}sk(U,e)

#Goals:

#U authenticates e on Nu,W,Ktemp
#W authenticates e on Nu,U,Ktemp
#Nu,Ktemp secret between U,W

#U authenticates e on Nu,Nw
#W authenticates e on Nu,Nw
#Nu,Nw secret between U,W

#e authenticates U on CPR,PWD # U *->* e : CPR,PWD
#CPR,PWD secret between U,e

#U authenticates e on CODE    # e *->* U : CODE
#CODE secret between U,e

#e authenticates U on mac(sk(U,e),CODE) # U *->* e : mac(sk(U,e),CODE)
#mac(sk(U,e),CODE) secret between U,e

#W authenticates e on Ktemp,U
#U authenticates e on Ktemp,W
#Ktemp secret between U,W,e
